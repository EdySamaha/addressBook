from django.shortcuts import render

from django.http import HttpResponse
from django.template import loader
from .forms import RegisterOrg,RegisterUser#,OrgidFilter
from .models import User,Organization


orgselected=False
exists=False

def index(request): #get all data from dbs
	orgs= Organization.objects.order_by('orgname') #Organization.objects.all()
	users= User.objects.order_by('username') #User.objects.all()
	# orgfilter= OrgidFilter()
	return render(request, 'index.html', {'orgs':orgs, 'users':users}) #, 'orgfilter':orgfilter

# def getFilteredData(request, _id):
# 	orgfilter= OrgidFilter(request.POST)
# 	if(_id<0): #No filter
# 		return index(request)

# 	orgs= Organization.objects.order_by('orgname') #Organization.objects.all()
# 	if(_id==0): #Users with no organization	
# 		users= User.objects.filter(org_id=None)	
# 	else:
# 		users= User.objects.filter(org_id=_id)	
# 	return render(request, 'index.html', {'orgs':orgs, 'users':users})


#region User
def registerUser(request):
	global orgselected, exists
	orgselected=False
	exists=False
	if request.method == 'POST': #If data is sent => add to db and go back to index
		form = RegisterUser(request.POST)
		if form.is_valid():
			userform = form.cleaned_data
			# userid = userform['user_id'] #autogenerated
			username = userform['username']
			email = userform['email']
			phone = userform['phone']
			org_id = userform['org_id']
			User.objects.create(username=username, email=email, phone=phone, org_id=org_id)
			
			return index(request)
	else: #If no data sent (just visiting register page => render page)
		form = RegisterUser()
	return render(request, 'register.html', {'form': form, 'orgselected':orgselected, 'exists':exists})


def getUser(request, _id): #Get user page with info to edit
	try: #avoid invalid id error
		user = User.objects.get(user_id=_id)
		global orgselected, exists
		orgselected=False
		exists=True

		if request.method == 'POST': #Edit User (editUser)
			form = RegisterUser(request.POST, instance=user)
			if form.is_valid():
				# userform = form.cleaned_data
				# # userid = userform['user_id'] #autogenerated
				# username = userform['username']
				# email = userform['email']
				# phone = userform['phone']
				# org_id = userform['org_id']
				# User.objects.create(username=username, email=email, phone=phone, org_id=org_id)
				form.save()
				return index(request)

		else: # See User data. Logically renders first since first accessed thorugh GET
			# form = RegisterUser(initial={
			# 	'username': user.username,
			# 	'email': user.email,
			# 	'phone': user.phone,
			# 	'org_id': user.org_id,
			# }) #BETTER:
			form = RegisterUser(instance=user)
			return render(request, 'register.html', {'form': form,'user':user, 'orgselected':orgselected, 'exists':exists})
	except:
		return index(request)


def deleteUser(request, _id): #API that renders back index
	try: #avoid invalid id error
		user = User.objects.get(user_id=_id)
		user.delete()
		# return render(request, 'index.html') #doesn't re-render the db data since not passed
	except:
		pass
	return index(request)
#endregion

#region Org
def registerOrg(request):
	global orgselected, exists
	orgselected=True
	exists=False
	if request.method == 'POST': #If data is sent => add to db and go back to index
		form = RegisterOrg(request.POST)
		if form.is_valid():
			orgform = form.cleaned_data
			# userid = orgform['user_id'] #autogenerated
			orgname = orgform['orgname']
			email = orgform['email']
			phone = orgform['phone']
			Organization.objects.create(orgname=orgname, email=email, phone=phone)
			
			return index(request)
	else: #If no data sent (just visiting register page => render page)
		form = RegisterOrg()
	return render(request, 'register.html', {'form': form, 'orgselected':orgselected, 'exists':exists})


def getOrg(request, _id): #Get user page with info to edit
	try:
		org = Organization.objects.get(org_id=_id)
		global orgselected, exists
		orgselected=False
		exists=True

		if request.method == 'POST': #Edit Org (editOrg)
			form = RegisterOrg(request.POST, instance=org)
			if form.is_valid():
				# orgform = form.cleaned_data
				# # userid = orgform['user_id'] #autogenerated
				# orgname = orgform['orgname']
				# email = orgform['email']
				# phone = orgform['phone']
				# Organization.objects.create(orgname=orgname, email=email, phone=phone)
				form.save()
				return index(request)

		else: # See Org data. Logically renders first since first accessed thorugh GET
			# form = RegisterOrg(initial={
			# 	'orgname': org.orgname,
			# 	'email': org.email,
			# 	'phone': org.phone,
			# }) #BETTER:
			form = RegisterOrg(instance=org)
			return render(request, 'register.html', {'form': form,'org':org, 'orgselected':orgselected, 'exists':exists})
	except:
		return index(request)


def deleteOrg(request, _id): #API that renders back index
	try:
		org = Organization.objects.get(org_id=_id)
		org.delete()
		# return render(request, 'index.html') #doesn't re-render the db data since not passed
	except:
		pass
	return index(request)
#endregion
